// Generated by view binder compiler. Do not edit!
package me.safarov399.auth.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.safarov399.auth.R;
import me.safarov399.ui.custom_views.SigmaButton;

public final class FragmentLogInBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView dontHaveAnAccount;

  @NonNull
  public final TextView goToSignUp;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final SigmaButton loginButton;

  @NonNull
  public final EditText loginEmail;

  @NonNull
  public final EditText loginPassword;

  @NonNull
  public final TextView welcomeBack;

  private FragmentLogInBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView dontHaveAnAccount, @NonNull TextView goToSignUp,
      @NonNull ImageView imageView3, @NonNull SigmaButton loginButton, @NonNull EditText loginEmail,
      @NonNull EditText loginPassword, @NonNull TextView welcomeBack) {
    this.rootView = rootView;
    this.dontHaveAnAccount = dontHaveAnAccount;
    this.goToSignUp = goToSignUp;
    this.imageView3 = imageView3;
    this.loginButton = loginButton;
    this.loginEmail = loginEmail;
    this.loginPassword = loginPassword;
    this.welcomeBack = welcomeBack;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLogInBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLogInBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_log_in, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLogInBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dont_have_an_account;
      TextView dontHaveAnAccount = ViewBindings.findChildViewById(rootView, id);
      if (dontHaveAnAccount == null) {
        break missingId;
      }

      id = R.id.go_to_sign_up;
      TextView goToSignUp = ViewBindings.findChildViewById(rootView, id);
      if (goToSignUp == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.login_button;
      SigmaButton loginButton = ViewBindings.findChildViewById(rootView, id);
      if (loginButton == null) {
        break missingId;
      }

      id = R.id.login_email;
      EditText loginEmail = ViewBindings.findChildViewById(rootView, id);
      if (loginEmail == null) {
        break missingId;
      }

      id = R.id.login_password;
      EditText loginPassword = ViewBindings.findChildViewById(rootView, id);
      if (loginPassword == null) {
        break missingId;
      }

      id = R.id.welcome_back;
      TextView welcomeBack = ViewBindings.findChildViewById(rootView, id);
      if (welcomeBack == null) {
        break missingId;
      }

      return new FragmentLogInBinding((ConstraintLayout) rootView, dontHaveAnAccount, goToSignUp,
          imageView3, loginButton, loginEmail, loginPassword, welcomeBack);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
